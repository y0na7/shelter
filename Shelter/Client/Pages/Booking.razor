@using Shelter.Client.Services;
@using Shelter.Shared.Models;
@page "/Booking"

<PageTitle>ShelterBooking</PageTitle>

<h1>Book her</h1>

<!--<div>
        <ul>
            @foreach (var item in Items)
            {
            <li>
                @item.property.Navn
                @item.property.Beskrivelse 
                @item.property.AntalPladser

            </li>
        }
        </ul>
</div>
-->
<div>
    <form action="/Booking">
  <label for="Items">Vælg et Shelter:</label>
  <select name="shelters" id="items">
      @foreach(var item in Items)
      {
    <option value="@item.property.Navn">@item.property.Navn</option>
      }
  </select>
  <br><br>
  
<div class="wrapper">
  <section class="createevent">
    <EditForm EditContext="@_editContext" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
      <DataAnnotationsValidator />
      <div class="form-group">
        <p>
          <label>
            Startdato:
          </label>
          <input id="txtDate" type="date" value=""<?php echo date('Y-m-j'); ?>
          <ValidationMessage For="@(() => _timeSample.date1)" />
          <label>
            Slutdato:
          </label>
          <input id="txtDate" type="date" value=""<?php echo date('Y-m-j'); ?>
          <ValidationMessage For="@(() => _timeSample.date2)" />
        </p>
      </div>
    </EditForm>
  </section>
</div>
 <br><br>

  <input type="submit" value="Submit">
</form>
</div>


<div>
<label>
    Name:
    <input @bind="TheBooking.Name"/>
</label>
<button class="btn btn-primary" @onclick="ShelterBookingHandler"></button>
</div>
@code {


    private List<ShelterItem> Items = new List<ShelterItem>();
    private BookingItem TheBooking = new BookingItem();

    [Inject]
    //inject shelterservice
    public IShelterService Service { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Items = (await Service.GetAllItems()).ToList();

    }
    [Inject]
    //inject bookingservice
    public IBookingService Service2 { get; set; }
    private async Task ShelterBookingHandler()
    {
        //AddItem
        int statusCode = (await Service2.AddItem(TheBooking));
        Console.WriteLine("Booking item added: status kode : "+statusCode);
    }
    public class TimeSample
  {
    public DateTime date1 { get; set; }
    public DateTime date2 { get; set; }
    public DateTime time { get; set; }
    public string text { get; set; }
  };

  private EditContext _editContext;
  private TimeSample _timeSample = new TimeSample();

  protected override void OnInitialized()
  {
    _editContext = new EditContext(_timeSample);
  }

  private void HandleValidSubmit()
  {
  }

  protected void HandleInvalidSubmit()
  {
  }

}
