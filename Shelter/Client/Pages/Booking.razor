@using Shelter.Client.Services;
@using Shelter.Shared.Models;
@page "/Booking"

<PageTitle>ShelterBooking</PageTitle>

<h1>Book her</h1>

<!--<div>
        <ul>
            @foreach (var item in Items)
            {
            <li>
                @item.property.Navn
                @item.property.Beskrivelse 
                @item.property.AntalPladser

            </li>
        }
        </ul>
</div>
-->
<!--DROPDOWNMENU UNDER-->
<div>
    <form action="/Booking">
  <label for="Items">Vælg et Shelter:</label>
  <select name="shelters" id="items" @onchange="FindShelter">
      @foreach(var item in Items)
            {
                
                //CurrentDropDown = @item.property.Navn;
                <option value="@item.property.Navn">@item.property.Navn</option>
      }
  </select>
  <h5>selected shelter: @selectedString</h5>

  <br><br>
  
<div class="wrapper">
  <section class="createevent">
    <EditForm Model=TheBooking>
        <p>Navn</p>
        <InputText @bind-Value="TheBooking.PersonNavn"/> 
        <p>Start Dato &bnsp&bnsp&bnsp&bnsp Slut Dato</p>
        <InputDate @bind-Value="TheBooking.Dato1"/> 
        <InputDate @bind-Value="TheBooking.Dato2"/> 
    </EditForm>
  </section>
</div>
 <br><br>
</form>
</div>



<br><br>
<div
    <button type="btn-succes" class="submit1" @onclick="ShelterBookingHandler"> Submit</button>
</div>
@code {


    private List<ShelterItem> Items = new List<ShelterItem>();
    private BookingItem TheBooking = new BookingItem();

    [Inject]
    //inject shelterservice
    public IShelterService Service { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Items = (await Service.GetAllItems()).ToList();

    }
    [Inject]
    //inject bookingservice
    public IBookingService Service2 { get; set; }
    private async Task ShelterBookingHandler()
    {
        
        //AddItem
        int statusCode = (await Service2.AddItem(TheBooking));
        Console.WriteLine("Booking item added: status kode : "+statusCode);
    }
  


    public class TimeSample
    {
        public DateTime date1 { get; set; }
        public DateTime date2 { get; set; }
        //public DateTime time { get; set; }
        //public string text { get; set; }
    };

    private EditContext _editContext;
    private TimeSample _timeSample = new TimeSample();

    protected override void OnInitialized()
    {
        _editContext = new EditContext(_timeSample);
    }

    protected void HandleInvalidSubmit()
    {
    }
    private ShelterItem shelterItemcurrent = new ShelterItem();
    private string CurrentDropDown;
    public string selectedString = "";

    public void FindShelter(ChangeEventArgs e)
    {Console.WriteLine(TheBooking.PersonNavn);
        Console.WriteLine(TheBooking.Shelternavn);
        Console.WriteLine(TheBooking.Dato1);
        Console.WriteLine(TheBooking.Dato2);
        TheBooking.Shelternavn = e.Value.ToString();

        selectedString = e.Value.ToString();
    }

}

